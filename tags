!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/vladyslav/Downloads/txtanimation2/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/a130f268/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
*Coffe...?* [PayPal](https://www.paypal.com/donate?hosted_button_id=BZ6DNYKFPBWNA)	include/clrscr/README.md	/^##### *Coffe...?* [PayPal](https:\/\/www.paypal.com\/donate?hosted_button_id=BZ6DNYKFPBWNA)  $/;"	T	section:clrscr""License: LGPL-3.0
*Coffe...?* [PayPal](https://www.paypal.com/donate?hosted_button_id=BZ6DNYKFPBWNA)	include/colorit/README.md	/^##### *Coffe...?* [PayPal](https:\/\/www.paypal.com\/donate?hosted_button_id=BZ6DNYKFPBWNA)  $/;"	T	section:colorit""License: LGPL-3.0
*Coffe...?* [PayPal](https://www.paypal.com/donate?hosted_button_id=BZ6DNYKFPBWNA)	include/fcheck/README.md	/^##### *Coffe...?* [PayPal](https:\/\/www.paypal.com\/donate?hosted_button_id=BZ6DNYKFPBWNA)$/;"	T	section:fcheck""License: LGPL-3.0
*Coffe...?* [PayPal](https://www.paypal.com/donate?hosted_button_id=BZ6DNYKFPBWNA)	include/sleep/README.md	/^##### *Coffe...?* [PayPal](https:\/\/www.paypal.com\/donate?hosted_button_id=BZ6DNYKFPBWNA)  $/;"	T	section:sleep""License: LGPL-3.0
B	include/colorit/colorit.hpp	/^	} Back, B;$/;"	m	struct:Colorit_bright_	typeref:struct:Colorit_bright_::Colorit_h_Back
B	include/colorit/colorit.hpp	/^} Back, B;$/;"	v	typeref:typename:const struct Colorit_back_
BLACK	include/colorit/colorit.hpp	/^		const char *BLACK   {Colorit_data.h_Black_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
BLACK	include/colorit/colorit.hpp	/^		const char *BLACK   {Colorit_data.h_Black_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
BLACK	include/colorit/colorit.hpp	/^	const char *BLACK   {Colorit_data.Black_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
BLACK	include/colorit/colorit.hpp	/^	const char *BLACK   {Colorit_data.Black_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
BLD	include/colorit/colorit.hpp	/^	const char *BLD              {Colorit_data.Bold};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
BLINK	include/colorit/colorit.hpp	/^	const char *BLINK	     {Colorit_data.Slow_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
BLK	include/colorit/colorit.hpp	/^		const char *BLK     {Colorit_data.h_Black_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
BLK	include/colorit/colorit.hpp	/^		const char *BLK     {Colorit_data.h_Black_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
BLK	include/colorit/colorit.hpp	/^	const char *BLK     {Colorit_data.Black_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
BLK	include/colorit/colorit.hpp	/^	const char *BLK     {Colorit_data.Black_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
BLNK	include/colorit/colorit.hpp	/^	const char *BLNK	     {Colorit_data.Slow_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
BLU	include/colorit/colorit.hpp	/^		const char *BLU     {Colorit_data.h_Blue_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
BLU	include/colorit/colorit.hpp	/^		const char *BLU     {Colorit_data.h_Blue_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
BLU	include/colorit/colorit.hpp	/^	const char *BLU     {Colorit_data.Blue_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
BLU	include/colorit/colorit.hpp	/^	const char *BLU     {Colorit_data.Blue_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
BLUE	include/colorit/colorit.hpp	/^		const char *BLUE    {Colorit_data.h_Blue_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
BLUE	include/colorit/colorit.hpp	/^		const char *BLUE    {Colorit_data.h_Blue_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
BLUE	include/colorit/colorit.hpp	/^	const char *BLUE    {Colorit_data.Blue_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
BLUE	include/colorit/colorit.hpp	/^	const char *BLUE    {Colorit_data.Blue_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
BOLD	include/colorit/colorit.hpp	/^	const char *BOLD             {Colorit_data.Bold};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Back	include/colorit/colorit.hpp	/^	} Back, B;$/;"	m	struct:Colorit_bright_	typeref:struct:Colorit_bright_::Colorit_h_Back
Back	include/colorit/colorit.hpp	/^} Back, B;$/;"	v	typeref:typename:const struct Colorit_back_
Backgroud colors:	include/colorit/README.md	/^#### Backgroud colors:$/;"	t	subsection:colorit""Usage""Constants
Black_bg	include/colorit/colorit.hpp	/^	const char *Black_bg           {"\\e[40m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Black_fg	include/colorit/colorit.hpp	/^	const char *Black_fg           {"\\e[30m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Blue_bg	include/colorit/colorit.hpp	/^	const char *Blue_bg            {"\\e[44m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Blue_fg	include/colorit/colorit.hpp	/^	const char *Blue_fg            {"\\e[34m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Bold	include/colorit/colorit.hpp	/^	const char *Bold               {"\\e[1m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Bright	include/colorit/colorit.hpp	/^} Bright, H;$/;"	v	typeref:typename:const struct Colorit_bright_
CLRSCR_H	include/clrscr/clrscr.hpp	/^#define CLRSCR_H$/;"	d
COLORIT_H	include/colorit/colorit.hpp	/^#define COLORIT_H$/;"	d
CYAN	include/colorit/colorit.hpp	/^		const char *CYAN    {Colorit_data.h_Cyan_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
CYAN	include/colorit/colorit.hpp	/^		const char *CYAN    {Colorit_data.h_Cyan_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
CYAN	include/colorit/colorit.hpp	/^	const char *CYAN    {Colorit_data.Cyan_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
CYAN	include/colorit/colorit.hpp	/^	const char *CYAN    {Colorit_data.Cyan_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
CYN	include/colorit/colorit.hpp	/^		const char *CYN     {Colorit_data.h_Cyan_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
CYN	include/colorit/colorit.hpp	/^		const char *CYN     {Colorit_data.h_Cyan_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
CYN	include/colorit/colorit.hpp	/^	const char *CYN     {Colorit_data.Cyan_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
CYN	include/colorit/colorit.hpp	/^	const char *CYN     {Colorit_data.Cyan_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
Clearmodes	include/clrscr/README.md	/^#### Clearmodes$/;"	t	section:clrscr""Usage
Colorit_back_	include/colorit/colorit.hpp	/^const struct Colorit_back_ {$/;"	s
Colorit_bright_	include/colorit/colorit.hpp	/^const struct Colorit_bright_ {$/;"	s
Colorit_data	include/colorit/colorit.hpp	/^} Colorit_data;$/;"	v	typeref:typename:const struct Colorit_data_
Colorit_data_	include/colorit/colorit.hpp	/^const struct Colorit_data_ {$/;"	s
Colorit_fore_	include/colorit/colorit.hpp	/^const struct Colorit_fore_ {$/;"	s
Colorit_h_Back	include/colorit/colorit.hpp	/^	struct Colorit_h_Back {$/;"	s	struct:Colorit_bright_
Colorit_h_Fore	include/colorit/colorit.hpp	/^	struct Colorit_h_Fore {$/;"	s	struct:Colorit_bright_
Colorit_style_	include/colorit/colorit.hpp	/^const struct Colorit_style_ {$/;"	s
Constants	include/colorit/README.md	/^### Constants$/;"	S	section:colorit""Usage
Cyan_bg	include/colorit/colorit.hpp	/^	const char *Cyan_bg            {"\\e[46m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Cyan_fg	include/colorit/colorit.hpp	/^	const char *Cyan_fg            {"\\e[36m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
DBL_UNDERLINE	include/colorit/colorit.hpp	/^	const char *DBL_UNDERLINE    {Colorit_data.Double_Underline};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DBL_UNDRLN	include/colorit/colorit.hpp	/^	const char *DBL_UNDRLN       {Colorit_data.Double_Underline};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DEF_BACKGROUND	include/colorit/colorit.hpp	/^	const char *DEF_BACKGROUND   {Colorit_data.Default_Background};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DEF_BKGRND	include/colorit/colorit.hpp	/^	const char *DEF_BKGRND       {Colorit_data.Default_Background};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DEF_INTENSITY	include/colorit/colorit.hpp	/^	const char *DEF_INTENSITY    {Colorit_data.Normal_Intensity};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DEF_INTNST	include/colorit/colorit.hpp	/^	const char *DEF_INTNST       {Colorit_data.Normal_Intensity};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
DIM	include/colorit/colorit.hpp	/^	const char *DIM              {Colorit_data.Dim};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Default_Background	include/colorit/colorit.hpp	/^	const char *Default_Background {"\\e[49m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Description	include/sleep/README.md	/^## Description $/;"	s	chapter:sleep
Dim	include/colorit/colorit.hpp	/^	const char *Dim                {"\\e[2m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Double_Underline	include/colorit/colorit.hpp	/^	const char *Double_Underline   {"\\e[21m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
EXIT_FAILURE	common/common.hpp	/^#define EXIT_FAILURE /;"	d
Example:	include/colorit/README.md	/^### Example:$/;"	S	section:colorit""Usage
Example:	include/sleep/README.md	/^### Example:$/;"	S	section:sleep""Usage
Example: [test.cpp](https://github.com/Dolfost/clrscr-cpp/blob/main/readme/run/test.cpp).	include/clrscr/README.md	/^### Example: [test.cpp](https:\/\/github.com\/Dolfost\/clrscr-cpp\/blob\/main\/readme\/run\/test/;"	S	section:clrscr""Usage
Examples	include/fcheck/README.md	/^### Examples$/;"	S	section:fcheck""Usage
F	include/colorit/colorit.hpp	/^	} Fore, F;$/;"	m	struct:Colorit_bright_	typeref:struct:Colorit_bright_::Colorit_h_Fore
F	include/colorit/colorit.hpp	/^} Fore, F;$/;"	v	typeref:typename:const struct Colorit_fore_
FAINT	include/colorit/colorit.hpp	/^	const char *FAINT            {Colorit_data.Dim};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
FCHECKHECK_HPP	include/fcheck/fcheck.hpp	/^#define FCHECKHECK_HPP$/;"	d
FCHECK_BAD	include/fcheck/messages/current.hpp	/^#define FCHECK_BAD	/;"	d
FCHECK_EOF	include/fcheck/messages/current.hpp	/^#define FCHECK_EOF /;"	d
FCHECK_EOF_MSG	include/fcheck/messages/current.hpp	/^#define FCHECK_EOF_MSG	/;"	d
FCHECK_FAIL	include/fcheck/messages/current.hpp	/^#define FCHECK_FAIL	/;"	d
FCHECK_FAILED_TO_OPEN	include/fcheck/messages/current.hpp	/^#define FCHECK_FAILED_TO_OPEN /;"	d
FCHECK_MESSAGE_H	include/fcheck/messages/current.hpp	/^#define FCHECK_MESSAGE_H$/;"	d
FCHECK_PREFIX	include/fcheck/messages/current.hpp	/^#define FCHECK_PREFIX /;"	d
FC_BAD	include/fcheck/messages/default.hpp	/^#define FC_BAD	/;"	d
FC_EOF	include/fcheck/messages/default.hpp	/^#define FC_EOF /;"	d
FC_EOF_MSG	include/fcheck/messages/default.hpp	/^#define FC_EOF_MSG	/;"	d
FC_FAIL	include/fcheck/messages/default.hpp	/^#define FC_FAIL	/;"	d
FC_FAILED_TO_OPEN	include/fcheck/messages/default.hpp	/^#define FC_FAILED_TO_OPEN /;"	d
FC_MESSAGE_H	include/fcheck/messages/default.hpp	/^#define FC_MESSAGE_H$/;"	d
FC_PREFIX	include/fcheck/messages/default.hpp	/^#define FC_PREFIX /;"	d
FNT	include/colorit/colorit.hpp	/^	const char *FNT              {Colorit_data.Dim};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Fore	include/colorit/colorit.hpp	/^	} Fore, F;$/;"	m	struct:Colorit_bright_	typeref:struct:Colorit_bright_::Colorit_h_Fore
Fore	include/colorit/colorit.hpp	/^} Fore, F;$/;"	v	typeref:typename:const struct Colorit_fore_
Foreground colors:	include/colorit/README.md	/^#### Foreground colors:$/;"	t	subsection:colorit""Usage""Constants
Function return	include/clrscr/README.md	/^#### Function return$/;"	t	section:clrscr""Usage
Functions	include/colorit/README.md	/^### Functions$/;"	S	section:colorit""Usage
Functions	include/fcheck/README.md	/^### Functions  $/;"	S	section:fcheck""Usage
GREEN	include/colorit/colorit.hpp	/^		const char *GREEN   {Colorit_data.h_Green_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
GREEN	include/colorit/colorit.hpp	/^		const char *GREEN   {Colorit_data.h_Green_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
GREEN	include/colorit/colorit.hpp	/^	const char *GREEN   {Colorit_data.Green_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
GREEN	include/colorit/colorit.hpp	/^	const char *GREEN   {Colorit_data.Green_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
GRN	include/colorit/colorit.hpp	/^		const char *GRN     {Colorit_data.h_Green_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
GRN	include/colorit/colorit.hpp	/^		const char *GRN     {Colorit_data.h_Green_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
GRN	include/colorit/colorit.hpp	/^	const char *GRN     {Colorit_data.Green_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
GRN	include/colorit/colorit.hpp	/^	const char *GRN     {Colorit_data.Green_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
Green_bg	include/colorit/colorit.hpp	/^	const char *Green_bg           {"\\e[42m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Green_fg	include/colorit/colorit.hpp	/^	const char *Green_fg           {"\\e[32m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
H	include/colorit/colorit.hpp	/^} Bright, H;$/;"	v	typeref:typename:const struct Colorit_bright_
HIDE	include/colorit/colorit.hpp	/^	const char *HIDE             {Colorit_data.Hide};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Hide	include/colorit/colorit.hpp	/^	const char *Hide               {"\\e[8m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
INVERT	include/colorit/colorit.hpp	/^	const char *INVERT           {Colorit_data.Invert};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
INVRT	include/colorit/colorit.hpp	/^	const char *INVRT            {Colorit_data.Invert};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
ITALIC	include/colorit/colorit.hpp	/^	const char *ITALIC           {Colorit_data.Italic};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
ITLC	include/colorit/colorit.hpp	/^	const char *ITLC             {Colorit_data.Italic};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Invert	include/colorit/colorit.hpp	/^	const char *Invert             {"\\e[7m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Italic	include/colorit/colorit.hpp	/^	const char *Italic             {"\\e[3m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Libinfo: [libinfo.txt](https://github.com/Dolfost/sleep-cpp/blob/main/readme/libinfo.txt).	include/sleep/README.md	/^### Libinfo: [libinfo.txt](https:\/\/github.com\/Dolfost\/sleep-cpp\/blob\/main\/readme\/libinfo/;"	S	section:sleep""Usage
License: LGPL-3.0	include/clrscr/README.md	/^## License: LGPL-3.0$/;"	s	chapter:clrscr
License: LGPL-3.0	include/colorit/README.md	/^## License: LGPL-3.0$/;"	s	chapter:colorit
License: LGPL-3.0	include/fcheck/README.md	/^## License: LGPL-3.0$/;"	s	chapter:fcheck
License: LGPL-3.0	include/sleep/README.md	/^## License: LGPL-3.0$/;"	s	chapter:sleep
MAG	include/colorit/colorit.hpp	/^		const char *MAG     {Colorit_data.h_Magneta_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
MAG	include/colorit/colorit.hpp	/^		const char *MAG     {Colorit_data.h_Magneta_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
MAG	include/colorit/colorit.hpp	/^	const char *MAG     {Colorit_data.Magneta_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
MAG	include/colorit/colorit.hpp	/^	const char *MAG     {Colorit_data.Magneta_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
MAGNETA	include/colorit/colorit.hpp	/^		const char *MAGNETA {Colorit_data.h_Magneta_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
MAGNETA	include/colorit/colorit.hpp	/^		const char *MAGNETA {Colorit_data.h_Magneta_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
MAGNETA	include/colorit/colorit.hpp	/^	const char *MAGNETA {Colorit_data.Magneta_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
MAGNETA	include/colorit/colorit.hpp	/^	const char *MAGNETA {Colorit_data.Magneta_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
Magneta_bg	include/colorit/colorit.hpp	/^	const char *Magneta_bg         {"\\e[45m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Magneta_fg	include/colorit/colorit.hpp	/^	const char *Magneta_fg         {"\\e[35m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
More about functions: [libinfo.txt](https://github.com/Dolfost/colorit-cpp/blob/main/readme/libinfo.txt).	include/colorit/README.md	/^#### More about functions: [libinfo.txt](https:\/\/github.com\/Dolfost\/colorit-cpp\/blob\/main\//;"	t	subsection:colorit""Usage""Functions
NOT_BLINK	include/colorit/colorit.hpp	/^	const char *NOT_BLINK	     {Colorit_data.Not_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_BLNK	include/colorit/colorit.hpp	/^	const char *NOT_BLNK	     {Colorit_data.Not_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_CROSSED_OUT	include/colorit/colorit.hpp	/^	const char *NOT_CROSSED_OUT  {Colorit_data.Not_Crossed_Out};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_CRSSD_OUT	include/colorit/colorit.hpp	/^	const char *NOT_CRSSD_OUT    {Colorit_data.Not_Crossed_Out};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_INVERSED	include/colorit/colorit.hpp	/^	const char *NOT_INVERSED     {Colorit_data.Not_Reversed};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_INVRSD	include/colorit/colorit.hpp	/^	const char *NOT_INVRSD       {Colorit_data.Not_Reversed};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_OVERLINED	include/colorit/colorit.hpp	/^	const char *NOT_OVERLINED    {Colorit_data.Not_Overlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_OVRLND	include/colorit/colorit.hpp	/^	const char *NOT_OVRLND       {Colorit_data.Not_Overlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_REVERSED	include/colorit/colorit.hpp	/^	const char *NOT_REVERSED     {Colorit_data.Not_Reversed};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_RVRSD	include/colorit/colorit.hpp	/^	const char *NOT_RVRSD        {Colorit_data.Not_Reversed};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_UNDERLINED	include/colorit/colorit.hpp	/^	const char *NOT_UNDERLINED   {Colorit_data.Not_Underlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
NOT_UNDRLND	include/colorit/colorit.hpp	/^	const char *NOT_UNDRLND      {Colorit_data.Not_Underlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Normal_Intensity	include/colorit/colorit.hpp	/^	const char *Normal_Intensity   {"\\e[22m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Not_Blinking	include/colorit/colorit.hpp	/^	const char *Not_Blinking       {"\\e[25m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Not_Crossed_Out	include/colorit/colorit.hpp	/^	const char *Not_Crossed_Out    {"\\e[29m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Not_Overlined	include/colorit/colorit.hpp	/^	const char *Not_Overlined      {"\\e[55m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Not_Reversed	include/colorit/colorit.hpp	/^	const char *Not_Reversed       {"\\e[27m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Not_Underlined	include/colorit/colorit.hpp	/^	const char *Not_Underlined     {"\\e[24m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
OVERLINED	include/colorit/colorit.hpp	/^	const char *OVERLINED	     {Colorit_data.Overlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
OVRLND	include/colorit/colorit.hpp	/^	const char *OVRLND	     {Colorit_data.Overlined};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Other libinfo: [libinfo.txt](https://github.com/Dolfost/clrscr-cpp/blob/main/readme/libinfo.txt).	include/clrscr/README.md	/^### Other libinfo: [libinfo.txt](https:\/\/github.com\/Dolfost\/clrscr-cpp\/blob\/main\/readme\//;"	S	section:clrscr""Usage
Overlined	include/colorit/colorit.hpp	/^	const char *Overlined          {"\\e[53m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
PRIMARY	include/colorit/colorit.hpp	/^	const char *PRIMARY	     {Colorit_data.Primary};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
PRMR	include/colorit/colorit.hpp	/^	const char *PRMR	     {Colorit_data.Primary};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Primary	include/colorit/colorit.hpp	/^	const char *Primary	       {"\\e[10m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
RAPID_BLINK	include/colorit/colorit.hpp	/^	const char *RAPID_BLINK      {Colorit_data.Rapid_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
RED	include/colorit/colorit.hpp	/^		const char *RED     {Colorit_data.h_Red_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
RED	include/colorit/colorit.hpp	/^		const char *RED     {Colorit_data.h_Red_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
RED	include/colorit/colorit.hpp	/^	const char *RED     {Colorit_data.Red_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
RED	include/colorit/colorit.hpp	/^	const char *RED     {Colorit_data.Red_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
RESET	include/colorit/colorit.hpp	/^	const char *RESET            {Colorit_data.Reset};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
REVERSE	include/colorit/colorit.hpp	/^	const char *REVERSE          {Colorit_data.Invert};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
RPD_BLNK	include/colorit/colorit.hpp	/^	const char *RPD_BLNK	     {Colorit_data.Rapid_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
RST	include/colorit/colorit.hpp	/^	const char *RST              {Colorit_data.Reset};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
RVRS	include/colorit/colorit.hpp	/^	const char *RVRS             {Colorit_data.Invert};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Rapid_Blinking	include/colorit/colorit.hpp	/^	const char *Rapid_Blinking     {"\\e[6m"}; \/\/$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Red_bg	include/colorit/colorit.hpp	/^	const char *Red_bg             {"\\e[41m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Red_fg	include/colorit/colorit.hpp	/^	const char *Red_fg             {"\\e[31m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Reset	include/colorit/README.md	/^#### Reset$/;"	t	subsection:colorit""Usage""Constants
Reset	include/colorit/colorit.hpp	/^	const char *Reset              {"\\e[0m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
S	include/colorit/colorit.hpp	/^} Style, S;$/;"	v	typeref:typename:const struct Colorit_style_
SLEEP_H	include/sleep/sleep.hpp	/^#define SLEEP_H$/;"	d
SLOW_BLINK	include/colorit/colorit.hpp	/^	const char *SLOW_BLINK       {Colorit_data.Slow_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
SLW_BLNK	include/colorit/colorit.hpp	/^	const char *SLW_BLNK         {Colorit_data.Slow_Blinking};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
STRIKE	include/colorit/colorit.hpp	/^	const char *STRIKE           {Colorit_data.Strike};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
STRK	include/colorit/colorit.hpp	/^	const char *STRK             {Colorit_data.Strike};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Slow_Blinking	include/colorit/colorit.hpp	/^	const char *Slow_Blinking      {"\\e[5m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Strike	include/colorit/colorit.hpp	/^	const char *Strike             {"\\e[9m"}; \/\/$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Style	include/colorit/colorit.hpp	/^} Style, S;$/;"	v	typeref:typename:const struct Colorit_style_
TAP_CYN	txtanimation-parser.hpp	/^#define TAP_CYN /;"	d
TAP_GRN	txtanimation-parser.hpp	/^#define TAP_GRN /;"	d
TAP_GRN1	txtanimation-parser.hpp	/^#define TAP_GRN1 /;"	d
TAP_MAG	txtanimation-parser.hpp	/^#define TAP_MAG /;"	d
TAP_RED	txtanimation-parser.hpp	/^#define TAP_RED /;"	d
TAP_YEL	txtanimation-parser.hpp	/^#define TAP_YEL /;"	d
TA_TEMP_SIZE	common/common.hpp	/^#define TA_TEMP_SIZE /;"	d
TXTANIAMTION_HPP	txtanimation.hpp	/^#define TXTANIAMTION_HPP$/;"	d
TXTANIAMTION_PARSER_HPP	txtanimation-parser.hpp	/^#define TXTANIAMTION_PARSER_HPP$/;"	d
TXTANIMATION_COMMON_HPP	common/common.hpp	/^#define TXTANIMATION_COMMON_HPP$/;"	d
Terminal colors	include/colorit/README.md	/^#### Terminal colors$/;"	t	subsection:colorit""Usage""Functions
Text modes:	include/colorit/README.md	/^#### Text modes:$/;"	t	subsection:colorit""Usage""Constants
That's not all, the rest of constants, aliases, modes and other libinfo: [libinfo.txt](https://github.com/Dolfost/colorit-cpp/blob/main/readme/libinfo.txt).	include/colorit/README.md	/^### That's not all, the rest of constants, aliases, modes and other libinfo: [libinfo.txt](https/;"	S	section:colorit""Usage
UNDERLINE	include/colorit/colorit.hpp	/^	const char *UNDERLINE        {Colorit_data.Underline};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
UNDRLN	include/colorit/colorit.hpp	/^	const char *UNDRLN           {Colorit_data.Underline};$/;"	m	struct:Colorit_style_	typeref:typename:const char *
Underline	include/colorit/colorit.hpp	/^	const char *Underline          {"\\e[4m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Usage	include/clrscr/README.md	/^## Usage$/;"	s	chapter:clrscr
Usage	include/colorit/README.md	/^## Usage$/;"	s	chapter:colorit
Usage	include/fcheck/README.md	/^## Usage$/;"	s	chapter:fcheck
Usage	include/sleep/README.md	/^## Usage$/;"	s	chapter:sleep
WHITE	include/colorit/colorit.hpp	/^		const char *WHITE   {Colorit_data.h_White_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
WHITE	include/colorit/colorit.hpp	/^		const char *WHITE   {Colorit_data.h_White_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
WHITE	include/colorit/colorit.hpp	/^	const char *WHITE   {Colorit_data.White_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
WHITE	include/colorit/colorit.hpp	/^	const char *WHITE   {Colorit_data.White_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
WHT	include/colorit/colorit.hpp	/^		const char *WHT     {Colorit_data.h_White_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
WHT	include/colorit/colorit.hpp	/^		const char *WHT     {Colorit_data.h_White_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
WHT	include/colorit/colorit.hpp	/^	const char *WHT     {Colorit_data.White_bg};	$/;"	m	struct:Colorit_back_	typeref:typename:const char *
WHT	include/colorit/colorit.hpp	/^	const char *WHT     {Colorit_data.White_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
White_bg	include/colorit/colorit.hpp	/^	const char *White_bg           {"\\e[47m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
White_fg	include/colorit/colorit.hpp	/^	const char *White_fg           {"\\e[37m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
YEL	include/colorit/colorit.hpp	/^		const char *YEL     {Colorit_data.h_Yellow_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
YEL	include/colorit/colorit.hpp	/^		const char *YEL     {Colorit_data.h_Yellow_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
YEL	include/colorit/colorit.hpp	/^	const char *YEL     {Colorit_data.Yellow_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
YEL	include/colorit/colorit.hpp	/^	const char *YEL     {Colorit_data.Yellow_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
YELLOW	include/colorit/colorit.hpp	/^		const char *YELLOW  {Colorit_data.h_Yellow_bg};$/;"	m	struct:Colorit_bright_::Colorit_h_Back	typeref:typename:const char *
YELLOW	include/colorit/colorit.hpp	/^		const char *YELLOW  {Colorit_data.h_Yellow_fg};$/;"	m	struct:Colorit_bright_::Colorit_h_Fore	typeref:typename:const char *
YELLOW	include/colorit/colorit.hpp	/^	const char *YELLOW  {Colorit_data.Yellow_bg};$/;"	m	struct:Colorit_back_	typeref:typename:const char *
YELLOW	include/colorit/colorit.hpp	/^	const char *YELLOW  {Colorit_data.Yellow_fg};$/;"	m	struct:Colorit_fore_	typeref:typename:const char *
Yellow_bg	include/colorit/colorit.hpp	/^	const char *Yellow_bg          {"\\e[43m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
Yellow_fg	include/colorit/colorit.hpp	/^	const char *Yellow_fg          {"\\e[33m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
block_size	common/common.hpp	/^	unsigned short block_size = 0;$/;"	m	struct:txt__anim__main__data	typeref:typename:unsigned short
blocks	txtanimation-parser.hpp	/^	unsigned int blocks = 0;$/;"	m	struct:txt__anim__parser__data	typeref:typename:unsigned int
check_output	include/fcheck/readme/run/is_open_ifstream_example.cpp	/^void check_output(const char *filename) {$/;"	f	typeref:typename:void
check_output0	include/fcheck/readme/run/ifstream_status_example.cpp	/^void check_output0(const char *filename) {$/;"	f	typeref:typename:void
check_output1	include/fcheck/readme/run/ifstream_status_example.cpp	/^void check_output1(const char *filename) {$/;"	f	typeref:typename:void
check_output2	include/fcheck/readme/run/ifstream_status_example.cpp	/^void check_output2(const char *filename) {$/;"	f	typeref:typename:void
clrscr	include/clrscr/README.md	/^# clrscr$/;"	c
clrscr	include/clrscr/clrscr.hpp	/^int clrscr(short clearmode) {$/;"	f	typeref:typename:int
colorit	include/colorit/README.md	/^# colorit$/;"	c
colorit_ansicode_	include/colorit/colorit.hpp	/^char colorit_ansicode_[20] {"\\e["};$/;"	v	typeref:typename:char[20]
current_line	txtanimation-parser.hpp	/^	unsigned long current_line = 0;$/;"	m	struct:txt__anim__parser__data	typeref:typename:unsigned long
delay	common/common.hpp	/^	float delay = 0;$/;"	m	struct:txt__anim__main__data	typeref:typename:float
expected_blocks	txtanimation-parser.hpp	/^	unsigned int expected_blocks = 0;$/;"	m	struct:txt__anim__parser__data	typeref:typename:unsigned int
fcheck	include/fcheck/README.md	/^# fcheck$/;"	c
filename	common/common.hpp	/^	char filename[TA_TEMP_SIZE];$/;"	m	struct:txt__anim__main__data	typeref:typename:char[]
h_Black_bg	include/colorit/colorit.hpp	/^	const char *h_Black_bg         {"\\e[100m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Black_fg	include/colorit/colorit.hpp	/^	const char *h_Black_fg         {"\\e[90m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Blue_bg	include/colorit/colorit.hpp	/^	const char *h_Blue_bg          {"\\e[104m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Blue_fg	include/colorit/colorit.hpp	/^	const char *h_Blue_fg          {"\\e[94m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Cyan_bg	include/colorit/colorit.hpp	/^	const char *h_Cyan_bg          {"\\e[106m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Cyan_fg	include/colorit/colorit.hpp	/^	const char *h_Cyan_fg          {"\\e[96m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Green_bg	include/colorit/colorit.hpp	/^	const char *h_Green_bg         {"\\e[102m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Green_fg	include/colorit/colorit.hpp	/^	const char *h_Green_fg         {"\\e[92m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Magneta_bg	include/colorit/colorit.hpp	/^	const char *h_Magneta_bg       {"\\e[105m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Magneta_fg	include/colorit/colorit.hpp	/^	const char *h_Magneta_fg       {"\\e[95m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Red_bg	include/colorit/colorit.hpp	/^	const char *h_Red_bg           {"\\e[101m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Red_fg	include/colorit/colorit.hpp	/^	const char *h_Red_fg           {"\\e[91m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_White_bg	include/colorit/colorit.hpp	/^	const char *h_White_bg         {"\\e[107m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_White_fg	include/colorit/colorit.hpp	/^	const char *h_White_fg         {"\\e[97m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Yellow_bg	include/colorit/colorit.hpp	/^	const char *h_Yellow_bg        {"\\e[103m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
h_Yellow_fg	include/colorit/colorit.hpp	/^	const char *h_Yellow_fg        {"\\e[93m"};$/;"	m	struct:Colorit_data_	typeref:typename:const char *
header_size	common/common.hpp	/^	const unsigned short header_size = 1;$/;"	m	struct:txt__anim__common__data	typeref:typename:const unsigned short
ifstrm_status	include/fcheck/fcheck.hpp	/^short ifstrm_status(std::ifstream & inFile, const char *filename, bool exit_if_fail, bool eof_re/;"	f	typeref:typename:short
ifstrm_status	include/fcheck/fcheck.hpp	/^short ifstrm_status(void (*funpt[3])(const char*), std::ifstream & inFile, const char *filename,/;"	f	typeref:typename:short
is_open	include/fcheck/fcheck.hpp	/^bool is_open(std::ifstream & inFile, const char *filename, bool exit_if_closed) {		\/\/ is_open /;"	f	typeref:typename:bool
is_open	include/fcheck/fcheck.hpp	/^bool is_open(std::ofstream & outFile, const char *filename, bool exit_if_closed) {		\/\/ is_open/;"	f	typeref:typename:bool
is_open	include/fcheck/fcheck.hpp	/^bool is_open(void (*funpt)(const char*), std::ifstream & inFile, const char *filename, const boo/;"	f	typeref:typename:bool
is_open	include/fcheck/fcheck.hpp	/^bool is_open(void (*funpt)(const char*), std::ofstream & outFile, const char *filename, bool exi/;"	f	typeref:typename:bool
libinfo: [libinfo.txt](https://github.com/Dolfost/fcheck-cpp/blob/main/readme/libinfo.txt).	include/fcheck/README.md	/^### libinfo: [libinfo.txt](https:\/\/github.com\/Dolfost\/fcheck-cpp\/blob\/main\/readme\/libinf/;"	S	section:fcheck""Usage
lines	txtanimation-parser.hpp	/^	unsigned long lines = 0;$/;"	m	struct:txt__anim__parser__data	typeref:typename:unsigned long
main	include/clrscr/readme/run/test.cpp	/^int main() {$/;"	f	typeref:typename:int
main	include/colorit/readme/run/demo.cpp	/^int main(void) {$/;"	f	typeref:typename:int
main	include/colorit/readme/run/showall.cpp	/^int main(){$/;"	f	typeref:typename:int
main	include/fcheck/readme/run/ifstream_status_example.cpp	/^int main(void) {$/;"	f	typeref:typename:int
main	include/fcheck/readme/run/is_open_ifstream_example.cpp	/^int main(void) {$/;"	f	typeref:typename:int
main	include/sleep/readme/run/test.cpp	/^int main() {$/;"	f	typeref:typename:int
main	readme/run/run_animation.cpp	/^int main(void) {$/;"	f	typeref:typename:int
main	readme/run/run_animation_parser.cpp	/^int main(void) {$/;"	f	typeref:typename:int
run_animation	txtanimation.hpp	/^void run_animation(const char filename[], const short clearmode) {$/;"	f	typeref:typename:void
run_animation_parser	txtanimation-parser.hpp	/^void run_animation_parser(char *filename, short clearmode) {$/;"	f	typeref:typename:void
setBack	include/colorit/colorit.hpp	/^char* setBack(const short arg) {$/;"	f	typeref:typename:char *
setBack	include/colorit/colorit.hpp	/^char* setBack(short r, short g, short b) {$/;"	f	typeref:typename:char *
setFore	include/colorit/colorit.hpp	/^char* setFore(const short arg) {$/;"	f	typeref:typename:char *
setFore	include/colorit/colorit.hpp	/^char* setFore(short r, short g, short b) {$/;"	f	typeref:typename:char *
sleep	include/sleep/README.md	/^# sleep$/;"	c
sleep	include/sleep/sleep.hpp	/^void sleep(const double secs) {$/;"	f	typeref:typename:void
sleep	include/sleep/sleep.hpp	/^void sleep(const float secs) {$/;"	f	typeref:typename:void
sleep	include/sleep/sleep.hpp	/^void sleep(const int secs) {$/;"	f	typeref:typename:void
ta_count_lines	txtanimation-parser.hpp	/^unsigned long ta_count_lines(char filename[]) {$/;"	f	typeref:typename:unsigned long
ta_parser_fatal_error_msg	txtanimation-parser.hpp	/^void ta_parser_fatal_error_msg(void) {$/;"	f	typeref:typename:void
ta_parser_info	txtanimation-parser.hpp	/^void ta_parser_info(txt__anim__common__data *common_data, txt__anim__main__data *main_data,$/;"	f	typeref:typename:void
ta_read_header	common/common.hpp	/^bool ta_read_header(std::ifstream& inFile, txt__anim__main__data *main_data) { $/;"	f	typeref:typename:bool
txt__anim__common__data	common/common.hpp	/^struct txt__anim__common__data {$/;"	s
txt__anim__main__data	common/common.hpp	/^struct txt__anim__main__data {$/;"	s
txt__anim__parser__data	txtanimation-parser.hpp	/^struct txt__anim__parser__data {$/;"	s
